AULA_1 CRIAÇÃO DE TABELAS, COLUNAS E DADOS

CREATE TABLE TALUNO
(
COD_ALUNO INTEGER NOT NULL,
NOME VARCHAR(30),
CIDADE VARCHAR2(30),
CEP VARCHAR(10),
PRIMARY KEY(COD_ALUNO)
);

SELECT * FROM TALUNO;

INSERT INTO TALUNO (COD_ALUNO,NOME,CIDADE,CEP)
VALUES (1,'MARCIO','NOVO HAMBURGO','93000000');



INSERT INTO TALUNO (COD_ALUNO,NOME,CIDADE,CEP)
VALUES (2,'PAULA','IVOTI','93000000');


INSERT INTO TALUNO (COD_ALUNO,NOME,CIDADE,CEP)
VALUES (3,'MARIA','SAPIRANGA','93000000');

CREATE TABLE TCURSO
(
COD_CURSO INTEGER NOT NULL PRIMARY KEY,
NOME VARCHAR2(30),
VALOR NUMBER(8,2),
CARGA_HORARIA INTEGER
);

SELECT*FROM TCURSO

INSERT INTO TCURSO VALUES(1,'ORACLE SQL E PL/SQL',500,25);
INSERT INTO TCURSO VALUES(2,'ORACLE DBA',499,25);
INSERT INTO TCURSO VALUES(3,'JAVA FUNDAMENTOS E 00',5100,100);
INSERT INTO TCURSO VALUES(4,'JAVASERVER FACES',1600,100);

CREATE TABLE TCONTRATO
(
COD_CONTRATO INTEGER NOT NULL PRIMARY KEY,
DATA DATE,
COD_ALUNO INTEGER,
TOTAL NUMBER(8,2),
DESCONTO NUMBER(5,2)
);

SELECT*FROM TCONTRATO

INSERT INTO TCONTRATO VALUES(1, SYSDATE ,1 ,500,10);
INSERT INTO TCONTRATO VALUES(2, SYSDATE ,2 ,500,10);
INSERT INTO TCONTRATO VALUES(3, SYSDATE ,3 ,1500,05);
INSERT INTO TCONTRATO VALUES(4, SYSDATE-5 ,2 ,1600,10);

INSERT INTO TCONTRATO VALUES(5, SYSDATE-4 ,5 ,800,10);       --O -4 AO LADO DO SYSDATE SOLICITA A GRAVAÇÃO DE UMA DATA 4 DIAS ANTES DE HOJE
INSERT INTO TCONTRATO VALUES(6, SYSDATE-3 ,5 ,445,0);
INSERT INTO TCONTRATO VALUES(7, SYSDATE-2 ,5 ,445,20);


ALTER TABLE TCONTRATO ADD COL_TESTE VARCHAR(50);             -- INSERIR COLUNA COM TABELA JÁ CRIADA

ALTER TABLE TCONTRATO DROP COLUMN COL_TESTE     -- EXCLUIR COLUNA

ALTER TABLE TALUNO RENAME COLUMN NOME TO NOME2 -- ALTERAR NOME

       SELECT*FROM TALUNO

DROP TABLE TABELA -- DELETAR TABELA


CREATE SEQUENCE SEQ_ALUNO START WITH 4;     -- CODIGO AUTOMATICO PARA DETERMINAR SEQUENCIA
INSERT INTO TALUNO(COD_ALUNO,NOME,CIDADE,CEP)
VALUES (SEQ_ALUNO.NEXTVAL,'VALDO','CANOAS','11000000');

INSERT INTO TALUNO(COD_ALUNO,NOME,CIDADE,CEP)
VALUES (SEQ_ALUNO.NEXTVAL,'ANDRE','IVOTI','12000000');


--DATA/HORA ATUAL
SELECT SYSDATE FROM DUAL -- SYSDATE RETORNA INFORMAÇÕES DE HORARIO NO SERVIDOR
-- DUAL É UMA TABELA FICTICIA UTILIZADA PARA COMPLETAR O SELECT / USADO COM FUNÇÕES

-- VALOR ATUAL DA SEQUENCIA // ULTIMA LINHA INSERIDA INFORMAÇÃO
SELECT SEQ_ALUNO.CURRVAL FROM DUAL     
  --

-- DESFAZER TODAS ALTERAÇÕES REALIZADA  (INSERT, UPDATE, DELETE)

ROLLBACK 

 -- CONFIRMAR ALTERAÇÕES REALIZADAS (INSERT, UPDATE, DELETE)
 COMMIT;              -- APOS O COMMIT NÃO É POSSIVEL RECUPERAR


DELETE * FROM TABELA -- DELETA TODOS OS REGISTROS DA TABELA


SELECT*FROM TALUNO
WHERE NOME = 'VALDO';


CREATE TABLE TITEM

(
COD_ITEM INTEGER NOT NULL PRIMARY KEY,
COD_CURSO INTEGER,
COD_CONTRATO INTEGER,
VALOR NUMBER(8,2)
);

INSERT INTO TITEM VALUES(1,1,1, 500);
INSERT INTO TITEM VALUES(2,1,2,500);
INSERT INTO TITEM VALUES(3,3,3,1500);
INSERT INTO TITEM VALUES(4,4,4,1600);
INSERT INTO TITEM VALUES(5,1,5,500);
INSERT INTO TITEM VALUES(6,1,6,500);
INSERT INTO TITEM VALUES(7,2,6,500);
INSERT INTO TITEM VALUES(8,3,7,500);

SELECT*FROM titem

commit;

 -- CONSULTAR E ALTERAR O DESCONTO DE 10 PARA 18

SELECT * FROM tcontrato
WHERE cod_contrato = 2;
 
UPDATE TCONTRATO SET
    DESCONTO = 18
WHERE cod_contrato = 2;

-- ALTERAR O VALOR DO DESCONTO / DATA / TOTAL

UPDATE TCONTRATO SET
DESCONTO = 20        
DATA = '25/03/2020' -- não rodou!! erro linha 137
TOTAL = 2500    
WHERE COD_CONTRATO = 2;


UPDATE TCONTRATO SET 
  DESCONTO = 20       ,
  DATA = '06/02/2020' ,   -- TAMBÉM NÃO FUNCIONOU -- ERRO LINHA 144
  TOTAL = 750
  WHERE COD_CONTRATO = 2;


SELECT * FROM TALUNO

UPDATE TALUNO SET
  CIDADE = 'IVOTI'        -- TROCAR PARA IVOTI
WHERE Upper(CIDADE) = 'SAPIRANGA'    -- TODOS QUE SÃO DE SAPIRANGA
--UPPER COMPARA MINUSCULA E MAIUSCULA

UPDATE TALUNO SET
NOME = 'FRIDA'
WHERE COD_ALUNO = 5

UPDATE TALUNO SET
CIDADE = 'SAMPA'
WHERE COD_ALUNO = 2

UPDATE TALUNO SET
CEP = 03106030
WHERE COD_ALUNO = 2

COMMIT;


AULA_2 CRIAÇÃO DE TABELAS, COLUNAS E DADOS
-- Cria tablespace p/ dados
-- drop tablespace tbs_dados;

create tablespace tbs_dados
datafile 'C:\oraclexe\app\oracle\oradata\tbd_dados.dbf' size 100M reuse
autoextend on next 10M maxsize 200M
online;


-- Cria usuario (dono das tabelas)
create user Suellen --usuario
identified by "2153"  --senha
default tablespace tbs_dados
temporary tablespace temp;

-- Cria e define a "role" de privilegios (perfil)
create role perfil_desenv;

grant
create cluster,
create database link,
create procedure,
create session,
create sequence,
create synonym,
create table,
create any type,
create trigger,
create view
to perfil_desenv;


grant alter session to perfil_desenv;


grant create trigger to Suellen;


grant perfil_desenv to Suellen;

grant unlimited tablespace to Suellen;

COMMIT;

AULA_3 CRIAÇÃO E ALTERAÇÕES DE DADOS

CREATE TABLE TALUNO
(
COD_ALUNO INTEGER NOT NULL,
NOME VARCHAR(30),
CIDADE VARCHAR2(30),
CEP VARCHAR(10),
PRIMARY KEY(COD_ALUNO)
);

SELECT * FROM TALUNO;

INSERT INTO TALUNO (COD_ALUNO,NOME,CIDADE,CEP)
VALUES (1,'MARCIO','NOVO HAMBURGO','93000000');



INSERT INTO TALUNO (COD_ALUNO,NOME,CIDADE,CEP)
VALUES (2,'PAULA','IVOTI','93000000');


INSERT INTO TALUNO (COD_ALUNO,NOME,CIDADE,CEP)
VALUES (3,'MARIA','SAPIRANGA','93000000');

CREATE TABLE TCURSO
(
COD_CURSO INTEGER NOT NULL PRIMARY KEY,
NOME VARCHAR2(30),
VALOR NUMBER(8,2),
CARGA_HORARIA INTEGER
);

SELECT*FROM TCURSO

INSERT INTO TCURSO VALUES(1,'ORACLE SQL E PL/SQL',500,25);
INSERT INTO TCURSO VALUES(2,'ORACLE DBA',499,25);
INSERT INTO TCURSO VALUES(3,'JAVA FUNDAMENTOS E 00',5100,100);
INSERT INTO TCURSO VALUES(4,'JAVASERVER FACES',1600,100);

CREATE TABLE TCONTRATO
(
COD_CONTRATO INTEGER NOT NULL PRIMARY KEY,
DATA DATE,
COD_ALUNO INTEGER,
TOTAL NUMBER(8,2),
DESCONTO NUMBER(5,2)
);

SELECT*FROM TCONTRATO

INSERT INTO TCONTRATO VALUES(1, SYSDATE ,1 ,500,10);
INSERT INTO TCONTRATO VALUES(2, SYSDATE ,2 ,500,10);
INSERT INTO TCONTRATO VALUES(3, SYSDATE ,3 ,1500,05);
INSERT INTO TCONTRATO VALUES(4, SYSDATE-5 ,2 ,1600,10);

INSERT INTO TCONTRATO VALUES(5, SYSDATE-4 ,5 ,800,10);       --O -4 AO LADO DO SYSDATE SOLICITA A GRAVAÇÃO DE UMA DATA 4 DIAS ANTES DE HOJE
INSERT INTO TCONTRATO VALUES(6, SYSDATE-3 ,5 ,445,0);
INSERT INTO TCONTRATO VALUES(7, SYSDATE-2 ,5 ,445,20);


ALTER TABLE TCONTRATO ADD COL_TESTE VARCHAR(50);             -- INSERIR COLUNA COM TABELA JÁ CRIADA

ALTER TABLE TCONTRATO DROP COLUMN COL_TESTE     -- EXCLUIR COLUNA

ALTER TABLE TALUNO RENAME COLUMN NOME TO NOME2 -- ALTERAR NOME

       SELECT*FROM TALUNO

DROP TABLE TABELA -- DELETAR TABELA


CREATE SEQUENCE SEQ_ALUNO START WITH 4;     -- CODIGO AUTOMATICO PARA DETERMINAR SEQUENCIA
INSERT INTO TALUNO(COD_ALUNO,NOME,CIDADE,CEP)
VALUES (SEQ_ALUNO.NEXTVAL,'VALDO','CANOAS','11000000');

INSERT INTO TALUNO(COD_ALUNO,NOME,CIDADE,CEP)
VALUES (SEQ_ALUNO.NEXTVAL,'ANDRE','IVOTI','12000000');


--DATA/HORA ATUAL
SELECT SYSDATE FROM DUAL -- SYSDATE RETORNA INFORMAÇÕES DE HORARIO NO SERVIDOR
-- DUAL É UMA TABELA FICTICIA UTILIZADA PARA COMPLETAR O SELECT / USADO COM FUNÇÕES

-- VALOR ATUAL DA SEQUENCIA // ULTIMA LINHA INSERIDA INFORMAÇÃO
SELECT SEQ_ALUNO.CURRVAL FROM DUAL     
  --

-- DESFAZER TODAS ALTERAÇÕES REALIZADA  (INSERT, UPDATE, DELETE)

ROLLBACK 

 -- CONFIRMAR ALTERAÇÕES REALIZADAS (INSERT, UPDATE, DELETE)
 COMMIT;              -- APOS O COMMIT NÃO É POSSIVEL RECUPERAR


DELETE * FROM TABELA -- DELETA TODOS OS REGISTROS DA TABELA


SELECT*FROM TALUNO
WHERE NOME = 'VALDO';


CREATE TABLE TITEM

(
COD_ITEM INTEGER NOT NULL PRIMARY KEY,
COD_CURSO INTEGER,
COD_CONTRATO INTEGER,
VALOR NUMBER(8,2)
);

INSERT INTO TITEM VALUES(1,1,1, 500);
INSERT INTO TITEM VALUES(2,1,2,500);
INSERT INTO TITEM VALUES(3,3,3,1500);
INSERT INTO TITEM VALUES(4,4,4,1600);
INSERT INTO TITEM VALUES(5,1,5,500);
INSERT INTO TITEM VALUES(6,1,6,500);
INSERT INTO TITEM VALUES(7,2,6,500);
INSERT INTO TITEM VALUES(8,3,7,500);

SELECT*FROM titem

commit;

 -- CONSULTAR E ALTERAR O DESCONTO DE 10 PARA 18

SELECT * FROM tcontrato
WHERE cod_contrato = 2;
 
UPDATE TCONTRATO SET
    DESCONTO = 18
WHERE cod_contrato = 2;

-- ALTERAR O VALOR DO DESCONTO / DATA / TOTAL

UPDATE TCONTRATO SET
DESCONTO = 20        
DATA = '25/03/2020' -- não rodou!! erro linha 137
TOTAL = 2500    
WHERE COD_CONTRATO = 2;


UPDATE TCONTRATO SET 
  DESCONTO = 20       ,
  DATA = '06/02/2020' ,   -- TAMBÉM NÃO FUNCIONOU -- ERRO LINHA 144
  TOTAL = 750
  WHERE COD_CONTRATO = 2;


SELECT * FROM TALUNO

UPDATE TALUNO SET
  CIDADE = 'IVOTI'        -- TROCAR PARA IVOTI
WHERE Upper(CIDADE) = 'SAPIRANGA'    -- TODOS QUE SÃO DE SAPIRANGA
--UPPER COMPARA MINUSCULA E MAIUSCULA

UPDATE TALUNO SET
NOME = 'FRIDA'
WHERE COD_ALUNO = 5

UPDATE TALUNO SET
CIDADE = 'SAMPA'
WHERE COD_ALUNO = 2

UPDATE TALUNO SET
CEP = 03106030
WHERE COD_ALUNO = 2

COMMIT;

AULA3 -- SELECT DE DADOS
SELECT COD_ALUNO AS RA, NOME AS "Nome do aluno", cidade -- NOMEANDO TITULO DA COLUNA COM AS
FROM TALUNO;

SELECT DISTINCT CIDADE FROM TALUNO    -- ELIMINAR DADOS DUPLICADOS

SELECT DISTINCT CIDADE, COD_ALUNO     -- ELIMINAR DADOS DUPLICADOS, MAS COMO EU CHAMO DUAS COLUNAS SÓ ELIMINA SE AMBAS TIVEREM IGUAIS
FROM TALUNO
ORDER BY CIDADE


SELECT NOME AS CURSO,
  VALOR,
  VALOR/CARGA_HORARIA,
  Round(VALOR/CARGA_HORARIA,2) AS VALOR_HORA   -- no caso arredondou pra 20
FROM TCURSO
ORDER BY VALOR_HORA
--APELIDO DE COLUNA SÓ FUNCIONA EM ORDER BY
-- ROUND TORNA A SOMA DO CALCULO EM 2 CASAS DECIMAIS

SELECT*FROM tcontrato

UPDATE TCONTRATO SET
DESCONTO = NULL            --- ALTERAR O DESCONTO DO CONTRATO 4 PARA NULL 
WHERE COD_CONTRATO = 4;    -- APESENTA NULL NA TABELA

-- qualquer calculo que tenha Null ele anula todo calculo

SELECT COD_CONTRATO, TOTAL, DESCONTO,
TOTAL+DESCONTO AS SOMA    -- RETORNA NULO EM DESCONTO E SOMA
FROM TCONTRATO;

SELECT COD_CONTRATO, 
       TOTAL,
       Nvl(DESCONTO, 0), -- COLOCAR VIRGULA SE NÃO ELE SOMA A PROXIMA TABELA
       DESCONTO,  
       TOTAL + Nvl(DESCONTO, 0) AS TOTAL_MAIS_DESCONTO   -- NVL A COLUNA QUE ESTIVER NULO RETORNA 0
FROM TCONTRATO



 SELECT COD_ALUNO || ' - ' || NOME || ' // ' ||CIDADE AS ALUNO    -- CONCATENAÇÃO UTILIZA || , OS '  INFORMAÇÃO ' SERVE PARA INSERIR DADOS A PARTE
 FROM TALUNO
 ORDER BY COD_ALUNO;


 INTEGER -1,2    - 999,99  -- INTEGER É APELIDO PARA NUMBER(38) - NUMERO INTEIRO
 NUMBER(5,2)     - 999,99  -- 3 DIGITOS,2 DIGITOS
 NUMERIC(5,2)

 DATE    - '10/03/2021 00:00:00' -- SEMPRE APRESENTA O HORARIO

 VARCHAR(10) - 'MARCIO'  -- SINONIMO DO VARCHAR2
 VARCHAR2(10) - 'MARCIO' -- OFICIAL DO ORACLE
 CHAR(10) -'MARCIO'      -- OCULPA OS 10 CARACTERES ENQUANTO O VARCHAR2 OCULPA SÓ OS DIGITADOS  // PARA CASOS BEM ESPECIFICOS


 BETWEEN AND -- entre dois valores (inclusive)
 IN (list) -- igual a um dos valores da lista
 LIKE -- igual a um padrão de caracteres
 IS NULL -- possui um valor nullo ou not null que significa que não possui um valor nulo

 SELECT * FROM taluno;

 -- ALTER TABLE TALUNO DROP COLUMN COLUNA
 ALTER TABLE TALUNO ADD ESTADO CHAR(2) DEFAULT 'RS';   -- DEFAULT DEFINE TODOS OS DADOS DA COLUNA COMO RS

 ALTER TABLE TALUNO ADD SALARIO NUMBER(8,2) DEFAULT 620;

 UPDATE TALUNO SET
 ESTADO = 'AC', SALARIO = 250
 WHERE COD_ALUNO = 2;

 UPDATE TALUNO SET
 ESTADO = 'MT', SALARIO = 2000
 WHERE COD_ALUNO = 1;

 UPDATE TALUNO SET
 ESTADO = 'SP', SALARIO = 800
 WHERE COD_ALUNO = 4;

 COMMIT;

 SELECT * FROM TALUNO
 WHERE ESTADO <> 'RS' -- RETORNAR ALUNOS DIFERENTE DE RS
 AND SALARIO <= 800   -- COM SALARIO MENOR OU IGUAL 800
 ORDER BY SALARIO DESC;    -- ORGANIZAR POR ORDEM DECRECENTE


 INSERT INTO TALUNO (COD_ALUNO, NOME, CIDADE)
 VALUES (SEQ_ALUNO.NEXTVAL, 'VALDO', 'QUATRO IRMÃOS');

 INSERT INTO TALUNO (COD_ALUNO, NOME, CIDADE)
 VALUES (SEQ_ALUNO.NEXTVAL,'ALDO', 'DOIS IRMÃOS'); 
   
 UPDATE TALUNO SET
 ESTADO = 'SP', 
 SALARIO = 900, 
 NOME = 'PEDRO'
 WHERE COD_ALUNO = 7;

 SELECT ESTADO, SALARIO, NOME FROM TALUNO
 ORDER BY ESTADO, SALARIO DESC;   -- SEMPRE QUE EU UTILIZAR O ORDER BY COM MAIS DE UMA COLUNA
 -- ELE IRÁ OBDECER O CRITERIO DE GRUPO, PRIMEIRO ORDENANDO POR ESTADO EM ORDEM ALFABETICA E DEPOIS POR SALARIO DO MAIOR PARA O MENOR


 ALTER TABLE TALUNO ADD NASCIMENTO DATE DEFAULT SYSDATE - 1000;     -- DATA DE HOJE MENOS 1000 DIAS


 SELECT SYSDATE - SYSDATE - 100 FROM DUAL - CALCULAR DIAS

 UPDATE taluno SET 
 NASCIMENTO = '13/06/2010'   -- NÃO FUNCIONOU
 WHERE COD_ALUNO = 1;


 SELECT * FROM TALUNO

 SELECT cod_aluno, nascimento,nome 
 FROM taluno

SELECT cod_aluno, nascimento, Trunc(nascimento), nome -- colocando o trunc em nascimento ele não consulta hora do padrão oracle
FROM taluno

-- trunc ele arredonda numero, no caso de data se eu consultar apenas por DD/MM/AAAA sem o trunc ele não me retorna dado nenhum porque esta sem o 00:00:00 ou hora especifica


 Concat (COD_ALUNO, NOME) FROM TALUNO          -- CONCATENAÇÃO 1

SELECT COD_ALUNO ||' '|| NOME FROM TALUNO            -- CONCATENAÇÃO 2
   
SELECT NOME, InitCap (NOME) AS NOME2 FROM TALUNO     -- DEIXAR A PRIMEIRA LETRA MAIUSCULA E AS OUTRAS MINUSCULAS

SELECT InStr(NOME, 'R') FROM TALUNO                  -- TRAS A POSIÇÃO EM QUE A LETRA SE ENCONTRA NA COLUNA

SELECT Length (NOME) FROM TALUNO                     -- CONTA QUANTOS CARACTERES O DADO TEM

SELECT NOME, Lower(NOME) FROM TALUNO                 -- TRANSFORMA PARA MINUSCULO

SELECT NOME, Upper(NOME) FROM TALUNO                 -- TRANSFORMA PARA MAIUSCULO

SELECT InitCap('SUELLEN SOUZA') FROM DUAL          -- INICIAIS MAIUSCULAS RESTANTE MINUSCULA

SELECT COD_ALUNO, LPad(COD_ALUNO,5,'0') FROM TALUNO  -- ACRESCENTA CARACTERES ANTES DO VALOR ( ZERO A ESQUERDA)

SELECT RPad(SALARIO,8,'0') FROM TALUNO               -- PREENCHE ATÉ 8 ZEROS A DIREITA

SELECT RPad(NOME,10,'-') FROM TALUNO                 -- PREENCHE ATÉ 10 - A DIREITA

SELECT SubStr(NOME,1,4) FROM TALUNO                  -- COPIA OS 4 PRIMEIROS CARACTERES A PARTIR DO PRIMEIRO CARACTERE

SELECT nome, REPLACE(Upper(nome),'R','s')FROM taluno -- SUBSTITUIÇÃO DE R POR S

SELECT NOME, SubStr (NOME, Length(NOME),1) FROM TALUNO -- RETORNA O ULTIMO CARACTER
SELECT NOME, SubStr (NOME,3,1) FROM TALUNO -- RETORNA O ULTIMO CARACTER

SINGLE-ROW
Concat - CONCATENA STRING
InitCap - CONVERTE STRING EM CARACTERES DEIXANDO A PRIMEIRA LETRA DAS PALAVRAS EM MAIUSCULA
InStr - RETORNA A POSIÇÃO NUMERICA DO CARACTER DENTRO DA STRING
LENGTH - RETORNA O NUMERO DE CARACTERES DA STRING (CONTADOR)
Lower - CONVERTE STRING PARA LETRAS MINUSCULAS
LPAD - RETORNA UMA STRING COM TAMANHO TOTAL DE N ALINHADA Á DIREITA
REPLACE - SUBSTITUI UMA STRING POR OUTRA
RPad - O CONTRÁRIO DO LPad -- COMPLETAR CARACTERES A DIREITA ATÉ COMPLETAR O VARCHAR
SubStr - COPIA A PARTE DE UM TEXTO 
Upper - DEIXA OS CARACTERES EM LETRAS MAIUSCULAS

SELECT * FROM TALUNO
WHERE lower(NOME) = 'marcio';    -- transforma select minusculo em maiusculo

SELECT * FROM TALUNO
WHERE Upper(NOME) = 'MARCIO';   -- transforma select maiusculo em minusculo

SELECT * FROM TALUNO
WHERE Upper(SubStr(CIDADE,1,3)) = 'CAN'; -- quando não se sabe a string completa
-- retornar todos os alunos que as 3 primeiras letras começam com CAN

UPDATE TALUNO SET   -- UPDATE NA TABELA ALUNO
SALARIO = 633.47    -- INSERIR SALARIO
WHERE COD_ALUNO = 1  -- ONDE COD ALUNO É 1


SELECT
SALARIO,
REPLACE(SALARIO, '.', ' '),     -- TROCAR PONTOS POR VAZIO
RPad(SALARIO, 10,'0'),          -- ZEROS A DIREITA ATÉ COMPLETAR 10 CASAS
LPad(SALARIO, 10,'0'),          -- ZEROS A ESQUERDA ATÉ COMPLETAR 10 CASAS
LPad(REPLACE(SALARIO,'.',' '),10,'0')  -- SUBSTITUIR . POR VAZIO E PREENCHER A ESQUERDA COM ZERO
FROM TALUNO     -- NA TABELA ALUNO

DATA
 --SYSDATE APRESENTA HORA EXATA DA MAQUINA
SELECT SYSDATE FROM DUAL       -- DUAL COMPLETA SINTAXE PRO SELECT TABELA FAKE

Round E Trunc

SELECT Round(45.925, 2 ),  --45.93   -- ARREDONDA PRA MAIS
       Trunc(45.929, 2 ),  --45.92   -- ARREDONDA PRA MENOS
       Mod(10,2) AS RESTO_DIVISAO,   -- DIVIDE 10 POR 2 E APRESENTA O RESTO DA DIVISÃO QUE É ZERO
       Trunc(1.99),                  -- APENAS O NUMERO ANTES DA VIRGULA
       Trunc(1.99, 2)                -- O VIRGULA 2 INSERE 2 NUMEROS APOS A VIRGULA
       FROM DUAL;


-- FUNÇÕES DE DATA E HORA

SELECT DATA,                                              
            SYSDATE,                                    -- DATAS DOS CONTRATOS  
            DATA + 5,                                   -- DATAS DO CONTRATO + 5 DIAS  
            SYSDATE - DATA AS DIF_DIAS,                 -- DIFERENÇA DA DATA DE HOJE MENOS A DATA DO CONTRATO INCLUINDO HORAS MINUTOS SEGUNDOS  
            Trunc(SYSDATE - DATA)       AS DIAS,        -- QUANTIDADE ARREDONDADA DA DATA DE HOJE - A DATA DO CONTRATO
            SYSDATE + 2 / 24            AS ADD_HORAS,   -- INCLUIR 2 HORAS DENTRO DA DATA
            SYSDATE + 15 / 1440         AS ADD_MINUTOS, -- INCLUIR 15 MINUTOS
            SYSDATE + 30 / (3600 * 24)  AS ADD_SEGUNDOS -- INCLUIR 30 SEGUNDOS
FROM TCONTRATO

AULA_4 - APRIMORAMENTO DE SELECT

SELECT SYSDATE, Trunc(SYSDATE) FROM DUAL -- DATA COM HORA ZERADA

SELECT months_BETWEEN(SYSDATE, SYSDATE-90) AS dif_mes FROM dual   -- diferença de meses entre datas

SELECT 
  cod_aluno,
  data,
  Trunc(Months_Between(SYSDATE, data)) || ' meses ' Meses  -- calcular meses desde o fechamento do contrato
  FROM tcontrato


SELECT Add_Months(SYSDATE, 5) AS ADICIONA_MES_DATA FROM dual  --  adiciona meses, no caso 5

SELECT Next_Day(SYSDATE, 'QUARTA-FEIRA') AS proxima_quarta_data FROM dual  -- não funcionou
SELECT NEXT_DAY(NEXT_DAY(TRUNC(SYSDATE, 'MM'),6),6) AS SEGUNDA_SEXTA_MES FROM DUAL -- ESSE FUNCIONOU   
--dias da semana sendo 1 domingo 2 segunda e assim sucessivamente

SELECT Last_Day(SYSDATE) AS ultimo_dia_mes FROM dual   -- para informar o ultimo dia do mes

SELECT Round(SYSDATE, 'MONTH') AS primeiro_dia_proximo_mes FROM dual -- PRIMEIRO DIA DO PROXIMO MÊS, CASO O DIA ATUAL SEJA MENOR QUE 15 RETORNA O PRIMEIRO DIA DO MES ATUAL

SELECT Trunc(SYSDATE, 'month') AS primeiro_dia_do_mes_atual FROM dual  -- PRIMEIRO DIA DO MES ATUAL

-- http://aprendaplsql.com/sql/funcoes-de-data-no-oracle/#Funcao_NEXT_DAY

-- FORMATAÇÃO DE DATAS

SELECT SYSDATE, To_Char(SYSDATE, 'DD/MM/YYYY') DATA FROM DUAL    -- RETORNAR APENAS DIA MES E ANO
SELECT SYSDATE, To_Char(SYSDATE, 'MM/YYYY') DATA FROM DUAL       -- RETORNA MES E ANO
SELECT SYSDATE, To_Char(SYSDATE, 'YYYY') DATA FROM DUAL          -- RETORNA ANO
SELECT To_Char(SYSDATE,'DY') DIA_SEMANA FROM DUAL                -- RETORNA O DIA DA SEMANA ESCRITO 3 CARACTERES
SELECT To_Char(SYSDATE,'DAY') DIA_SEMANA FROM DUAL               -- RETORNA DIA DA SEMANA COMPLETO
SELECT To_Char(SYSDATE,'YEAR') ANO_ESCRITO FROM DUAL             -- RETORNA O ANO ESCRITO
SELECT To_Char(SYSDATE,'SÃO PAULO," fmDay "," DD "de" fmMonth "de" YYYY') FROM dual


select  ('Cidade,'|| to_char(TO_Date(SYSDATE),'dd ” de ” FMMONTH ” de ” YYYY’,'nls_date_language=portuguese)))data  from dual  
select TO_CHAR(sysdate, 'DD "de" fmMonth "de" YYYY','NLS_DATE_LANGUAGE=PORTUGUESE')



-- SUB CONSULTAS
SELECT COD_CONTRATO, DATA, TOTAL
FROM TCONTRATO
WHERE TOTAL >=
  (SELECT VALOR FROM TCURSO  
  WHERE COD_CURSO = 1);

-- SUB SELECT SÓ PODE RETORNAR UM REGISTRO


SELECT * FROM TALUNO

SELECT COD_ALUNO, NOME, CIDADE        -- RETORNE OS DADOS CITADOS REFERENTE A TODOS OS ALUNOS QUE SEJAM DO MESMO LUGAR DA SUBCONSULTA
FROM TALUNO
WHERE CIDADE = 
      (SELECT CIDADE FROM TALUNO
      WHERE COD_ALUNO = 3) -- RETORNE A CIDADE DO ALUNO 3 (SUBCONSULTA)
AND COD_ALUNO <> 3; -- PARA APRESENTAR TODOS OS ALUNOS DA MESMA CIDADE EXCETO O REFERENCIADO


SELECT COD_ALUNO, NOME, CIDADE, ESTADO
FROM TALUNO
WHERE (CIDADE, ESTADO) =  -- SUB SELECT CONSIDERANDO DUAS COLUNAS
      (SELECT CIDADE, ESTADO FROM TALUNO     -- CASA A MESMA QUANTIDADE DE COLUNAS E TIPOS NOS 2 SELECTS
      WHERE COD_ALUNO = 3)
AND COD_ALUNO <> 3;



SELECT * FROM TITEM

SELECT COD_CURSO, Min(VALOR), Sum(VALOR),
Count(*) QTDE
FROM TITEM
WHERE COD_CURSO > 0 
GROUP BY COD_CURSO -- COLOCA A COLUNA QUE NÃO TEM FUNÇÃO DE GRUPO
HAVING Min(VALOR) >= -- CLAUSULA HAVING QUANDO UTILIZA FUNÇÃO GRUPO MIN
      (SELECT Avg(VALOR) FROM TCURSO)
ORDER BY COD_CURSO;



-- SOMAR TOTAL DE CONTRATO POR ALUNO
-- MOSTRAR SOMENTE CUJO O MENOR CONTRATO SEJA MAIOR QUE  
-- VALOR MEDIO DE CURSO

SELECT COD_ALUNO, Min(TOTAL) AS MINIMO , Sum(TOTAL) AS SOMA  
FROM TCONTRATO
GROUP BY COD_ALUNO
HAVING Min(TOTAL) <>
      (SELECT Avg(VALOR) AS MEDIA FROM TCURSO)

      SELECT * FROM TCURSO


 -- TODAS OS CURSOS QUE ESTÃO NA TABELA DE ITENS VENDIDOS

 SELECT COD_CURSO, NOME, VALOR
 FROM TCURSO
 WHERE COD_CURSO IN -- OPERADOR IN PARA RETORNAR MAIS DE 1 REGISTRO
      (SELECT COD_CURSO FROM TITEM)

      -- SUB SELECT SÓ PODE TRAZER UM REGISTRO SE USAR OPERADORES DE CALCULOS
      -- SE QUISER MAIS DE 1 REGISTRO DEVE-SE USAR OPERADOR ''IN''

-- TODOS OS CURSOS QUE NÃO ESTÃO NA TABELA TITEM
-- CURSOS NÃO VENDIDOS
--NO CASO NÃO RETORNARÁ DADO POIS NÃO TEMOS NENHUM CADASTRADO

SELECT COD_CURSO, NOME, VALOR
FROM TCURSO
WHERE COD_CURSO NOT IN  --NOT IN NÃO ESTEJA
      (SELECT COD_CURSO FROM TITEM)
ORDER BY NOME


-- SUBCONSULTA NA CLAUSULA FROM

SELECT ITE.COD_CONTATO, ITE.VALOR, ITE.COD_CURSO,
        CUR.COD_CURSO, CUR.VALOR
FROM TITEM ITE,
      (SELECT COD_CURSO, VALOR
      FROM TCURSO WHERE VALOR > 500) CUR

      WHERE CUR.COD_CURSO = ITE.COD_CURSO


 -- COMANDOS DML // MANIPULANDO DADOS
 -- INSERT UPDATE DELETE
 -- TRANSAÇÕES // COMMIT E ROLLBACK SÓ PODEM SER FEITOS EM CIMA DESSES COMANDOS

 -- INSERT INTO ATIRBUI UMA LINHA DE CADA VEZ
 

 CREATE TABLE TDESCONTO
 ( CLASSE VARCHAR(2),
 INFERIOR INTEGER,
 SUPERIOR INTEGER );

 SELECT*FROM TDESCONTO

 INSERT INTO TDESCONTO(CLASSE, INFERIOR, SUPERIOR)
 VALUES ('&cla', &inf, &sup);    -- inserir dados nas colunas como variaveis de substituição

 SELECT * FROM tdesconto
 WHERE classe = '&cla';      -- consulta de variavel especifica

 UPDATE TDESCONTO SET
 INFERIOR = &INF,
 SUPERIOR = &SUP        -- substituir valores
 WHERE CLASSE = '&CLA'

CREATE TABLE TDESCONTO2           -- CRIAR UMA NOVA TABELA
  AS SELECT * FROM TDESCONTO      -- COM BASE EM OUTRA TABELA // COPIA OS DADOS

  SELECT * FROM TDESCONTO2

COMMIT;


--TRANSAÇÃO (COMMIT/ROLLBACK)

-- DELETAR TODOS OS REGISTROS

ROLLBACK;

-- 
DELETE FROM TDESCONTO2 -- DELETA TODOS OS REGISTROS 
-- MAS PODE UTILIZAR O WHERE PARA EXCLUIR DETERMINADO DADO 

TRUNCATE TABLE TDESCONTO  -- DELETA TODOS OS REGISTROS DA TABELA 
-- QUANDO TIVER CERTEZA DA EXCLUSÃO PQ NÃO PODE UTILIZAR ROLLBACK

-- SAVEPOINT
-- TRANSAÇÃO
-- PONTO DE RESTAURAÇÃO
        SELECT*FROM TDESCONTO
 
SAVEPOINT UPD_B;
 COMMIT;


UPDATE TDESCONTO SET
SUPERIOR = 88
WHERE CLASSE = 'B';

SAVEPOINT UPD_A;
 COMMIT;

UPDATE TDESCONTO SET
SUPERIOR = 99
WHERE CLASSE = 'A';


-- PONTO DE RESTAURAÇÃO
SAVEPOINT INS_OK;

INSERT INTO TDESCONTO(CLASSE, INFERIOR, SUPERIOR)
VALUES ('&CLA', &INF,&SUP); -- INSERIR DADOS


ROLLBACK TO SAVEPOINT INS_OK;    -- DESFAZER INS X
ROLLBACK TO SAVEPOINT UPD_A;     -- DESFAZER UPD A


-- COMENTARIO NA TABELA
COMMENT ON TABLE TCONTRATO IS 'informações de contratos';


-- COMENTARIO NA COLUNA DA TABELA
COMMENT ON COLUMN TCONTRATO.COD_CONTATO IS 'codigo do contrato';

-- CONSULTAR COMENTARIOS FEITO PELO USER NAS COLUNAS 
SELECT*FROM USER_COL_COMMENTS WHERE TABLE_NAME='TCONTRATO'

-- CONSULTAR COMENTARIOS FEITO PELO USER NAS TABELAS
SELECT*FROM USER_TABLE_COMMENTS WHERE TABLE_NAME='TCONTRATO'


